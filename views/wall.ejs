<!DOCTYPE html>
<html>

<head>
  <link rel="icon" type="image/x-icon" href=
  "https://icons8.com/icon/L2zv2Zo2qmbx/twitter">
  <title>Wall</title>
  <% if (check) { %>

    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style type="text/css">
      body {
        height: 100%;
        background-color: #eeeeee;
        margin: 100;
        font-family: Arial, Helvetica, sans-serif;
        font-weight: 600;
      }
      .likesection {
        display: flex;
        color: white;
      }

      .like{
        margin-top: 22px;
        margin-left: 10px;
      }
      button[type=like] {
     
     padding-top: 20px;
     background-color: #5e97dc;
     color: #fff;
     border-radius: 0px;
     border: 0;
     box-shadow:0;
     display: inline-block;
   }

   textarea.comment {
        /* padding: 10px 0px;
        margin-left: 450px;
        margin-top: 10px;
        margin-right: 0px;
        border-radius: 10px; */
        border-radius: 10px;
        width: 500px;
        padding: 10px;
        margin-left: auto;
        margin-right: auto;
        margin-bottom: 5px;
        margin-top: 5px;
        box-sizing: border-box;
        color: #585858;
        border: 1px solid #F5F5F5;
        font-size: 16px;
        letter-spacing: 1px;
        height: 40px !important;
        width: 420px;
        display: inline-block;
      }

      textarea:focus {
        -moz-box-shadow: none !important;
        -webkit-box-shadow: none !important;
        box-shadow: none !important;
        border: 1px solid #ffffff !important;
        outline-width: 0 !important;
      }


      

      .card {
        border-radius: 10px;
        width: 500px;
        padding: 20px;
        margin-left: 80px;
        margin-right: auto;
        margin-bottom: 30px;
        margin-top: 30px;
        
        background-color: #ffffff;
      }

      .profile {
        text-align: center;
        border-radius: 10px;
        width: 500px;
        height: 100px;
        padding: 20px;
        top: 20px;
        left: 20px;
        margin-top: 30px;
        margin-left: auto;
        margin-right:auto;
        background-color: #ffffff;
      }
      .whole{
        display:flex;
      }
      .wallPic {
        width: 150px;
        height: 150px;
        object-fit: contain;
        background-color: #E0E0E0;
        display: inline-block;
      }


      button[type=addfriend] {
        appearance: none;
        -webkit-appearance: none;
       
        text-align: top;
        border: 0;
        box-shadow: 0 0 15px 4px rgba(0, 0, 0, 0.06);
        background-color: #000000;
        color: #fff;
        border-radius: 5px;
        display: inline-block;
      }

      button[type=removefriend] {
        appearance: none;
        -webkit-appearance: none;
       
        text-align: top;
        border: 0;
        box-shadow: 0 0 15px 4px rgba(0, 0, 0, 0.06);
        background-color: #000000;
        color: #fff;
        border-radius: 5px;
        display: inline-block;
      }


      .post {
        border-radius: 10px;
        width: 500px;
        padding: 20px;
        margin-left: auto;
        margin-right: auto;
        margin-bottom: 0px;
        margin-top: 30px;
        background-color: #5e97dc;
      }

      .commentBar{
        border-radius: 10px;
        width: 500px;
        padding: 20px;
        margin-left: auto;
        margin-right: auto;
        display:flex;
       
      }

      .comments {
        border-radius: 10px;
        width: 500px;
        padding: 10px;
        margin-left: auto;
        margin-right: auto;
        margin-bottom: 5px;
        margin-top: 5px;
        border-color: #3681de;
        border-width: 10px;
        background-color: #ffffff;
      }

      /* post */
      .user {
        font-size: 20px;
        padding-right: 10px;
        padding-left: 10px;
        padding-bottom: 10px;
        display: inline-block;
        color: white;
      }

      .time {
        font-size: 10px;
        display: inline-block;
        color: white;
      }

      .content {
        border-radius: 10px;
        width: 100%;
        padding: 10px;
        margin-left: auto;
        margin-right: auto;
        margin-bottom: 0px;
        margin-top: 0px;
        background-color: #ffffff;
      }

      .profile-pic {
        width: 60px;
        height: 60px;
        border-radius: 50%;
        object-fit: contain;
        background-color: #E0E0E0;
        display: inline-block;
      }

      .profile-pic-nav {
        float: left;
        width: 40px;
        height: 40px;
        margin-top: 5px;
        margin-bottom: 5px;
        margin-left: 5px;
        margin-right: 5px;
        border-radius: 50%;
        object-fit: contain;
        background-color: #E0E0E0;
        display: inline-block;
      }

      h3 {
        display: inline-block;
        padding-bottom: 0px;
        padding-left: 20px;
      }

     

      select {
        border: none;
        font-size: 15px;
        background-color: #fff !important;
      }

      select:focus {
        -moz-box-shadow: none !important;
        -webkit-box-shadow: none !important;
        box-shadow: none !important;
        outline-width: 0 !important;
      }

      ::placeholder {
        color: #BDBDBD;
      }

      :-ms-input-placeholder {
        color: #BDBDBD;
      }

      ::-ms-input-placeholder {
        color: #BDBDBD;
      }

      .btn-success {
        border-radius: 50px;
        padding: 4px 40px;
      }

      .options {
        font-size: 23px;
        color: #757575;
        cursor: pointer;
      }

      .options:hover {
        color: #000;
      }

      .topnav {
        overflow: hidden;
        background-color: #ffffff;
      }

      .topnav a {
        float: left;
        display: block;
        color: black;
        text-align: center;
        padding: 14px 16px;
        text-decoration: none;
        font-size: 17px;
      }

      .topnav a:hover {
        background-color: #d1d1d1;
        color: black;
        border-radius: 30px;
      }

      .topnav a.active {
        background-color: #0668E1;
        color: rgb(255, 255, 255);
        border-radius: 30px;
      }

      .topnav .search-container {
        float: right;
      }

      .topnav input[type=text] {
        padding: 6px;
        margin-top: 8px;
        font-size: 17px;
        border: none;
      }

      .topnav .search-container button {
        float: right;
        padding: 6px 10px;
        margin-top: 8px;
        margin-right: 16px;
        background: rgb(166, 166, 167);
        font-size: 17px;
        border: none;
        cursor: pointer;
      }

      .topnav .search-container button:hover {
        background: rgb(148, 147, 147);
      }

      @media screen and (max-width: 600px) {
        .topnav .search-container {
          float: none;
        }

        .topnav a,
        .topnav input[type=text],
        .topnav .search-container button {
          float: none;
          display: block;
          text-align: left;
          width: 100%;
          margin: 0;
          padding: 14px;
        }

        .topnav input[type=text] {
          border: 1px solid #ccc;
        }
      }


      button[type=comment] {
        appearance: none;
        -webkit-appearance: none;
        padding-left: 10px;
        padding-right: 10px;
      
        text-align: top;
        border: 0;
        box-shadow: 0 0 15px 4px rgba(0, 0, 0, 0.06);
        background-color: #0668E1;
        color: #fff;
        border-radius: 5px;
        display: inline-block;
      }

    


      button[type=post] {
        appearance: none;
        -webkit-appearance: none;
        padding: 10px;
        margin: 10px 0;
        border: 0;
        box-shadow: 0 0 15px 4px rgba(0, 0, 0, 0.06);
        background-color: #0b994d;
        color: #fff;
        border-radius: 5px;
      }
    </style>
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js">
    </script>
    <link rel="stylesheet" href="//code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css">
    <link rel="stylesheet" href="/resources/demos/style.css">
    <script src="https://code.jquery.com/jquery-3.6.0.js"></script>
    <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.js"></script>

    <% if (isOther) { %>

      <script type="text/javascript">
        var sessionCreator = "";
        var wallOwner = "";
       
        window.onload = function () {


          const urlParams = new URLSearchParams(window.location.search);
          const currWallUser = urlParams.get('search');
          console.log("search results: ");
          console.log(currWallUser);
          wallOwner = currWallUser;
          
          $(document).ready(function () {
            $.ajax({
              type: "POST",
              url: "/postOtherWallPageAjax",
              data: {
                currWall: currWallUser
              },
              success: function (result) {
                getwallownerinfo();
                getBoolFriend();
               
                
              },
              error: function (result) {
                alert('error');
              }
            });
          });

        

       
        }
     
      </script>
      <% } else { %>
        <script>
          window.onload = function () {
            getwallownerinfo();
          }
        </script>
        <% } %>
          <script>

var globalPostList = [];


var refreshTime = function () {
getFriendsPosts();
setTimeout(refreshTime, 3000);
};
$(document).ready(function () {
setTimeout(refreshTime, 3000);
});
            function redirectHome() {
              console.log("redirect homepage");
              window.location.replace('/homepage');

            }

            function getwallownerinfo() {
              $(document).ready(function () {

                $.getJSON('/getDetermineWallOwner', function (data) {
                
                  console.log("get determine wall owner")
                  if (data === null) {
                    alert("user does not exist");
                    redirectHome();
                  } else {
                    console.log("success");
                   
                    var fullnameP = data.fullname.S
                    var usernameP = data.username.S
                    var emailP = data.email.S
                   
                    var string = "";
                    string = "<b>name: </b>"+fullnameP;
                    document.getElementById("wallName").innerHTML = string;
                    string = "<b>username: </b> @"+usernameP;
                    document.getElementById("wallUsername").innerHTML = string;
                   

                    // var pfpUser = '<img class="wallPic" src='+ pfp+'>';
                    // document.getElementById("userpicurl").innerHTML = pfpUser;

           
                    
                    getFriendsPosts();
                    
                  }
                });
              });
            }



   

            //calls ajax with /getList that retreives restaraut data from db
            function getFriendsPosts() {
              var friendposts = [];
              console.log("here!");
              $(document).ready(function () {
                console.log("here!!");
                $.getJSON('/getWallAjax', function (elementsArr) { // EDIT THIS PART
                  console.log("here!!!");
                

                  for (let i = 0; i < elementsArr.length; i++) {
              var contentN = elementsArr[i].content;
              var userIDN = elementsArr[i].userID;
              var timepostN = elementsArr[i].timepost;
              var likesN = elementsArr[i].likes;
              var commentsN = elementsArr[i].comments;
              var postTypeN = elementsArr[i].postType;
              var likesCount =elementsArr[i].likes;
              var Item =
              {
                "content": contentN,
                "comments": commentsN,
                "likes": likesN,
                "userID": userIDN,
                "timepost": timepostN,
                "postType": postTypeN,
                "likesCount" : likesCount
              };
              friendposts.push(Item);
            
          
            }
           
                  // A comparer used to determine if two entries are equal.
            const isSame = (a, b) =>
            a.userID === b.userID 
            && a.timepost === b.timepost;

            // Get items that only occur in the left array,
            // using the compareFunction to determine equality.
            const onlyInLeft = (left, right, compareFunction) =>
              left.filter(leftValue =>
                !right.some(rightValue =>
                  compareFunction(leftValue, rightValue)));

            var difference = onlyInLeft(friendposts, globalPostList, isSame);
          

          

            for (let i = difference.length - 1; i >= 0; i--) {
              createPostDiv(difference[i]);
            };
            globalPostList = friendposts;

                });
              });
            }
            function tagUsernames(availableTags) {
              $(function () {
                $("#search").autocomplete({
                  source: availableTags
                });
              });
            }

            function createPostDiv(friendpost) {
        console.log(friendpost.likesCount)

        test_el = document.createElement('div');
        var test = new Date(parseInt(friendpost.timepost));
        var time = (new Date(test)).toLocaleDateString()
          +
          " "
          +
          (new Date(test)).toLocaleTimeString();
          var likeID =   "like-btn-"+ friendpost.userID.split(" ").join("") + "-" + friendpost.timepost
          var likeCount = "like-cnt-"+ friendpost.userID.split(" ").join("") + "-" + friendpost.timepost
        test_el.innerHTML =
          '<div class="post"><div class= "userPost">'
          + friendpost.userID +
          '</div>' +
          '<div class="time" >'
          + time +
          '</div>' +
          '<div class="content" >'
          + friendpost.content +
          '</div>'+
          '<div class = "likesection">'
          +'<button type="like"  id='+likeID+'>'
         +' <img src="https://img.icons8.com/material-outlined/24/FFFFFF/hearts.png"/></button>'+
         '<div class="like" id ='+likeCount+'>'+friendpost.likesCount+'</div></div>'
         +'</div>'
       

        var commentsArr = (friendpost.comments).map(obj => obj.S);
        for (let i = 0; i < commentsArr.length; i++) {
          test_el.innerHTML +=
            '<div class="comments" >'
            + commentsArr[i] +
            '</div>';
        }
        var commentID = "comment-button-" + friendpost.userID.split(" ").join("") + "-" + friendpost.timepost;
        
        var commentBarID = "comment-bar-" + friendpost.userID.split(" ").join("") + "-" + friendpost.timepost
        var commentContent = "commentcontent-" + friendpost.userID.split(" ").join("") + "-" + friendpost.timepost
        test_el.innerHTML +=
          '<div class = "commentBar" id = ' + commentBarID + '><textarea class="comment" placeholder="say something..." name=' + commentContent + '></textarea>'
          +
          '<button type = "comment" id = ' + commentID + '>Comment</button></div>'
        document.body.appendChild(test_el);
        var cardDiv = document.getElementById('whole');
        cardDiv.after(test_el);
        commentButtons(commentID, commentContent, friendpost.timepost, friendpost.userID, commentBarID, friendpost.postType);
        likeButton( friendpost.userID, friendpost.postType, friendpost.timepost);
      }
      //need time post???

      function likeButton( userID, postType, timepost) {
        var hashlikeID =   "#like-btn-"+ userID.split(" ").join("") + "-" + timepost
        var likeID ="like-btn-"+ userID.split(" ").join("") + "-" + timepost
        $(document).ready(function () {
          $(hashlikeID).click(function (e) {
            console.log("like clicked!");
            console.log(hashlikeID);
            e.preventDefault();

            $.ajax({
              type: "POST",
              url: "/addLikesToPost",
              data: {
                userID: userID,
                postType: postType,
                timepost: timepost
              },

              success: function (result) {
              
               var string = "like-cnt-"+ userID.split(" ").join("") + "-" + timepost;

               document.getElementById(string).innerHTML= result.S;
               
              
              },
              error: function (result) {
                alert('accept friend error');
              }
            });



          });

        });
      }
      function commentButtons(commentIDBefore, commentCon, time, postUserID, commentBarID, postType) {
        $(document).ready(function () {
          commentID = "#" + commentIDBefore;
          $(commentID).click(function (e) {
            console.log("comment clicked!");
            e.preventDefault();
            var contentUpd = document.getElementsByName(commentCon)[0].value;
            document.getElementsByName(commentCon)[0].value = "";
            
            
           
            var contentWithUser = sessionCreator + ": " + contentUpd;
        
            $.ajax({
              type: "POST",
              url: "/createcomment",
              data: {
                comment: contentWithUser,
                userID: postUserID,
                timepost: time, // EDIT THIS PART
                table: postType
              },
              success: function (result) {


              

                test_el = document.createElement('div');
                test_el.innerHTML +=
                  '<div class="comments" >'
                  + contentWithUser +
                  '</div>';
                document.body.appendChild(test_el);
              
                var cardDiv = document.getElementById(commentBarID);
                cardDiv.before(test_el);
                var commentBarWithHash = "#" + commentBarID;
            
                $(commentBarWithHash).val('');
              },
              error: function (result) {
                alert('create comment error');
              }
            });
          });
        });
      }

      function getBoolFriend() {
              $(document).ready(function () {
                $.getJSON('/getIsWallAFriend', function (friendBool) {
                 
                
                  friend = friendBool.BOOL;

                  console.log(friend);
                
              
                  if(friend){
                    console.log("is friend");
                     var test_el= '<button type = "removefriend" id = "removefriend"><img src="https://img.icons8.com/material/24/FFFFFF/delete-user-male.png"/>unfollow</button></div>'
         
                var cardDiv = document.getElementById('friendBoolButton').innerHTML = test_el;
               
                removeFriendButtons();
                  }
                  else{
                    console.log("is not friend");
                    var test_el =
                '<button type = "addfriend" id = "addfriend"><img src="https://img.icons8.com/material-sharp/24/FFFFFF/add-user-male.png"/>follow</button></div>'
             
                var cardDiv = document.getElementById('friendBoolButton').innerHTML = test_el;
                addFriendButtons();
                  }
                });
              });
            }

      function addFriendButtons() {
      $(document).ready(function () {
        $("#addfriend").click(function (e) {
      
          
           
            e.preventDefault();
            $.ajax({
              type: "POST",
              url: "/acceptFriendRequest",
              data: {
                
                sender : wallOwner
              },

              success: function (result) {
                alert('following user');
                    getBoolFriend();

              },
              error: function (result) {
                alert('accept friend error');
              }
            });
    

        });

      });
    }

    function removeFriendButtons() {
      $(document).ready(function () {
        $("#removefriend").click(function (e) {
      
            console.log("remove clicked!");
            console.log(wallOwner);
           
            e.preventDefault();
                    $.ajax({
                      type: "POST",
                      url: "/deleteFriend",
                      data:{ 
                          friend : wallOwner
                      },

                    success: function(result) {
                    alert('unfollowed user');
                    getBoolFriend();

                    },
                error: function(result) {
                    alert('error');
                }
            });
    

        });

      });
    }

            $(document).ready(function () {
              $.getJSON('/getCreator', function (creator) {
                sessionCreator = creator;
                console.log(sessionCreator);
                $("#currUser").html(sessionCreator);
              });
            });

            $(document).ready(function () {
              $.getJSON('/getAllUsername', function (usernameArr) { // EDIT THIS PART
                var tagArr = usernameArr.map(obj => obj.username.S);
                tagUsernames(tagArr);
              });
            });
          </script>
          <script>
            $(document).ready(function () {
              $("#post-button").click(function (e) {
                console.log("post clicked!");
                e.preventDefault();
                var contentUpd = document.getElementsByName("postcontent")[0].value;
                document.getElementsByName("postcontent")[0].value = "";
                $.ajax({
                  type: "POST",
                  url: "/createwall",
                  data: {
                    content: contentUpd,
                    userID: sessionCreator,
                    timepost: new Date().getTime()
                  },
                  success: function (result) {
                  
                    var Item =
                    {
                      "content": result.content,
                      "comments": [],
                      "likes": [],
                      "userID": result.userID,
                      "timepost": result.timepost,
                    };
                   
                  },
                  error: function (result) {
                   
                    alert('error');
                  }
                });
              });
            });
          </script>

          <% } else { %>
            <script>
              alert("login required")
            </script>
            <% } %>
</head>

<body>
  <div class="topnav">
    <div id = "navpicdiv">
    </div>
    <a href="/homepage"><img src="https://img.icons8.com/ios-filled/30/000000/twitter.png"/></a>
    <a href="/homepage">Home</a>
    <a class="active" href="/wall">Profile</a>
    <a href="/hashtag"># Explore</a>
    <a href="/logout">Logout</a>

    <div class="search-container">
      <div class="ui-widget">
        <form action="/otherwall" method="get">
          <input type="text" placeholder="Search.." name="search" id="search">
          <button type="submit" id="search-btn">
            <i class="fa fa-search"></i>
          </button>
      </div>
    </div>
  </div>
  <div id = "whole" class = "whole">
    <div class="profile" id = "profileID">
  
      <div class="userInfo">
        <div id = "userpicurl">
        </div>
        <div id="wallName"></div>
        <div id = "wallUsername"></div>

        <div id = "friendBoolButton">
        </div>
        <div id = "follow">
          <div id = "followers"></div>
          <div id = "following"></div>
          </div
       
       
      
  
 
        </div>
      </div>
    </div>
</body>

</html>